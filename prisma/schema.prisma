// schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client" // Explicit output path
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Customer {
  id            String       @default(cuid()) @id
  name          String
  email         String?      @unique
  phone         String?
  address       String?
  orders        Order[]      // Relation to orders placed by the customer
  paymentPending Float?     // Amount pending for payment
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Order {
  id            String       @default(cuid()) @id
  customer      Customer     @relation(fields: [customerId], references: [id])
  customerId    String
  customerName  String
  contactNumber String?
  email         String?
  items         OrderItem[]  // Relation to OrderItem for product list
  totalCost     Float        @default(0.0)
  notes         String?
  status        String       @default("Pending") // e.g., Pending, Delivered, etc.
  deliveryDate  DateTime?
  paymentDueDate DateTime?
  paymentStatus String?      @default("Unpaid")// e.g., Paid, Unpaid
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  broughtBy     String?      // Name of the person who brought the order
}

model OrderItem {
  id        String   @default(cuid()) @id
  productName String   // Name of the product
  quantity    Int
  price       Float    // Price per unit
  orderId     String
  order       Order    @relation(fields: [orderId], references: [id])
  productId   String
  product     Product   @relation(fields: [productId], references: [id], name: "ProductToOrderItems")
}

model Product {
  id            String   @default(cuid()) @id
  name          String
  price         Float
  quantity      Int
  description   String?
  lastUpdated   DateTime @default(now())
  orderItems    OrderItem[] @relation("ProductToOrderItems")
}

model Admin {
  id            String   @default(cuid()) @id
  username       String
  password       String
  email          String? @unique
}